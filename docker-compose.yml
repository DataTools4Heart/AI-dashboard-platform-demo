version: "2.4"

services:
  my-mongodb:
    hostname: my-mongodb
    image: mongo:4.4
    container_name: my-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
      MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
      MONGO_SERVER: ${MONGO_SERVER}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
      MONGO_INITDB_COLLECTION: ${MONGO_INITDB_COLLECTION}
    ports:
      - 27017:27017
    links:
      - keycloak
    env_file: .env 
    volumes:
      - ./volumes/mongo_data:/data/db
      - ./mongodb/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
            dev:
            open-vre:
                ipv4_address: 172.21.0.10
  mongo_seed:
    container_name: mongo_seed
    image: mongo
    links:
      - my-mongodb
    volumes:
      - ./mongo-seed:/mongo-seed
    command:
      /mongo-seed/import.sh

    networks:
      - dev


  postgres:
    container_name: postgres
    image: postgres
    environment:
       POSTGRES_DB: ${POSTGRES_DB}
       POSTGRES_USER: ${POSTGRES_USER}
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
              open-vre:
                 ipv4_address: 172.21.0.13 

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:15.0.2
    environment:
        DB_VENDOR: ${DB_VENDOR}
        DB_ADDR: ${DB_ADDR}
        DB_DATABASE: ${DB_DATABASE}
        DB_USER: ${DB_USER}
        DB_SCHEMA: ${DB_SCHEMA}
        DB_PASSWORD: ${DB_PASSWORD}
        KEYCLOAK_USER: ${KEYCLOAK_USER}
        KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
        KEYCLOAK_FRONTEND_URL: http://84.88.186.195:8089/auth
    volumes:
        - "./keycloak/realms:/opt/jboss/keycloak/imports"
    command:
            - '-b 0.0.0.0 -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=/opt/jboss/keycloak/imports/realm-export.json -Dkeycloak.migration.strategy=IGNORE_EXISTING'
    ports:
        - 8089:8080
    links:
        - postgres
    networks:
              open-vre:
                ipv4_address: 172.21.0.12

  sgemaster:
    build: ./sge
    volumes:
      - ./sge:/sge
    environment:
      RUNUSER_USERNAME: dummy
      RUNUSER_HOME: ./sge
      RUNUSER_UID: '1000'
      RUNUSER_GID: '100'
    container_name: sgemaster
    hostname: sgemaster
    stdin_open: true
    networks:
      - open-vre
      - shared
    ports:
      - 6444:6444
    restart: always  

  front_end:
    container_name: front_end
    hostname: front_end.dockerized_vre_open-vre
    build: './front_end/'
    environment:
      fpm.pool.pm.max_requests: 1001
      fpm.pool.user: www-data
      fpm.pool.group: www-data
      RUNUSER_USERNAME: user
      RUNUSER_HOME: ./sge
      RUNUSER_UID: '2000'
      RUNUSER_GID: '2000'
    volumes:
      - ./front_end/act_qmaster:/var/lib/gridengine/default/common/act_qmaster
      - ./volumes/config:/var/www/html/openVRE/config
      - shared_data:/shared_data
    links:
      - my-mongodb
      - keycloak
        #  - postgres
    depends_on:
      - sgemaster
    ports:
      - "8088:80"
        # - "6445:6445"
    networks:
              shared:
              open-vre:
                ipv4_address: 172.21.0.14


networks:
  dev:
    driver: bridge
  open-vre:
    ipam:
      config:
            - subnet: 172.21.0.0/24

  shared: 
    external:
      name: shared

volumes:
  shared_data:
    driver: local
    driver_opts:
       o: bind
       type: none
       device: /home/user/dockerized_vre/volumes/shared_data

